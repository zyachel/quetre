//-//////////////////////////////////////////////////////
//-                LOCAL HELPER MIXINS
//-//////////////////////////////////////////////////////
//- this mixin handles a single paragraph
mixin spansChecker(spans)
  each span in spans
    //- handle tex equations
    - if(span.modifiers.math)
      //- setting that var in the base.pug value to true here, so that mathjax library is loaded in the end
      - someAnswerContainsMath = true;
      span.text__span-math= `\\(${span.text}\\)`
    //- handle small code text
    - else if (span.modifiers.code) 
      code.text__span-code= span.text
    //- handle misc. embedded content
    - else if (span.modifiers.embed)
      a.text__span-link.text__link(href=span.modifiers.embed.url)= span.modifiers.embed.title || '(link to user embedded content)'
    //- handle links
    - else if (span.modifiers.link) //- removing quora.com from the link in case it is a quora.com link.
      +quetrefyUrl(span.modifiers.link.url, span.text)(class='text__span-link text__link')
    //- handle bold + italic text
    - else if (!!span.modifiers.bold && !!span.modifiers.italic)
      strong.text__span-bold: em.text__span-italic= span.text
    //- handle bold text
    - else if (!!span.modifiers.bold)
      strong.text__span-bold= span.text
    //- handle italic text
    - else if (!!span.modifiers.italic)
      em.text__span-italic= span.text
    //- regular plain text
    - else 
      span.text__span-plain= span.text 

//-//////////////////////////////////////////////////////
//-           MAIN MIXIN TO FORMAT ANY TEXT
//-//////////////////////////////////////////////////////
mixin formatText(text)
  each para in text
    //-  handle images
    -if(para.type ==='image')
      .text__para.text__image-container
        +proxifyImg(para.spans[0].modifiers.master_url)(class='text__image', alt='User embedded image')
    //- handle code blocks
    - else if (para.type ==='code')
      pre.text__para.text__code: code
        +spansChecker(para.spans)
    //- handle quotes
    - else if(para.quoted)
      blockquote.text__para.text__quote 
        +spansChecker(para.spans)
    //- handling lists
    -else if(para.type.includes('-list'))
      p(class=`text__para text__${para.type} text__${para.type}--${para.indent}` role='listitem')
        +spansChecker(para.spans)
    //- handling horizontal rule
    - else if(para.type === 'horizontal-rule')
      hr.text__para.text__hr
    //- handling embedded youtube video
    - else if(para.type === 'yt-embed')
      .text__para.text__embed
        a.text__span-link.text__link(href=para.spans[0].modifiers.embed.url) (link to user-embedded YouTube video)
    //- handling embedded tweet
    - else if(para.type === 'tweet')
      .text__para.text__embed.text__embed-tweet
        //- directly pasting raw HTML which pug will process just fine
        | !{para.spans[0].modifiers.embed.html}
    //- rest of the types that don't need/can't be put in a semantic html tag
    - else
      p(class=`text__para text__${para.type}`)
        +spansChecker(para.spans)
